{
  "name": "Threejs-htmlrenderer",
  "tagline": "",
  "body": "# Threejs-htmlRenderer\r\nRender html elements in 3d environment.\r\n\r\n![release](https://img.shields.io/badge/release-1.0.2-blue.svg)\r\n\r\n![capture](Capture.PNG)\r\n\r\n## Requirement\r\nYou must include in your html jQuery, three.js and the plugin CSS3DRenderer ([link](http://threejs.org/examples/js/renderers/CSS3DRenderer.js)).\r\n\r\n## How to install\r\n```terminal\r\nnpm install --save threejs-htmlRenderer\r\n```\r\nInclude in your .html this library after jQuery and three.js.\r\n\r\n## How it works\r\nDeclare an element with id `html3DView` and another with id `view`. In `#html3DView`, compose your html elements with as parent the class name `page`. You can set positions & rotations by attributes `data-position-(x|y|z)` and `data-rotation-(x|y|z)`:\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"utf-8\">\r\n    <title>Example</title>\r\n  </head>\r\n  <body>\r\n    <div id=\"html3DView\" style=\"display: none;\">\r\n      <div class=\"page\" data-position-z=\"-180\" data-rotation-y=\"3.14159\">\r\n        <h1>Hello World</h1>\r\n      </div>\r\n    </div>\r\n    <div id=\"view\"></div>\r\n  </body>\r\n</html>\r\n```\r\n\r\nIn your `app.js` in the initalize method, call HtmlRenderer and pass camera object:\r\n```js\r\nvar html3d = new HtmlRenderer();\r\n\r\nfunction init() {\r\n  ...\r\n  html3d.init(camera);\r\n}\r\n```\r\nAnd run the `render` method in your animate method:\r\n```js\r\nfunction animate() {\r\n  ...\r\n  html3d.render();\r\n}\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}